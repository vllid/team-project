@startuml "erd"

entity "Навыки" as skills
{
    ID_Навык : int <<PK>>
    Название : nvarchar(20)
}

entity "Каталог навыков специалиста" as skills_cat
{
    ID_Кат_нав : int <<PK>>
    ID_Навык : int <<FK>>
    ID_Специалист : int <<FK>>
}

entity "Специализации" as spec_enum
{
    ID_Специализация : int <<PK>>
    Название : nvarchar(30)
}

entity "Отзывы" as appl
{
    ID_Отзыв : int <<PK>>
    ID_Пользователя nvarchar(50) <<FK>>
    Оценка : float 
    Комментарий : nvarchar(250)
}

entity "Платформы" as platf 
{
    ID_Платформа : int <<PK>>
    Название : nvarchar(30)
}

entity "Страны" as countries 
{
    ID_Страна : int <<PK>>
    Название : nvarchar(50)
}

entity "Города" as cities 
{
    ID_Город : int <<PK>>
    Название : nvarchar(50)
}

entity "Статусы заявки" as app_statuses
{
    ID_Статус_заявки : int <<PK>>
    Название : nvarchar(20)
}

entity "Статусы консультации" as cons_statuses
{
    ID_Статус_консультации : int <<PK>>
    Название : nvarchar(20)
}

entity "Заказчики" as cust 
{
    ID_Заказчик : nvarchar(50) <<PK>>
    ID_Страна : int <<FK>>
    ID_Город : int <<FK>>
    email : nvarchar(30)
    Пароль : nvarchar(30)
    Имя : nvarchar(20)
    Фамилия : nvarchar(20)
    Отчество : nvarchar(20)
    Дата рождения : datetime 
    О себе : nvarchar(250)
}

entity "Специалист" as spec 
{
    ID_Специалист : nvarchar(50) <<PK>>
    ID_Страна : int <<FK>>
    ID_Город : int <<FK>>
    email : nvarchar(30)
    Пароль : nvarchar(30)
    Имя : nvarchar(20)
    Фамилия : nvarchar(20)
    Отчество : nvarchar(20)
    Дата рождения : datetime 
    О себе : nvarchar(250)
    ID_Специализация : int <<FK>>
    Портфорлио : nvarchar(400)
}

enum "Заявка" as request 
{
    ID_Заявка : int <<PK>>
    ID_Заказчик : int <<FK>>
    ID_Специалист : int <<FK>>
    Время связи : datatime 
    ID_Статус_заявки : int <<FK>>
    ID_Платформа : int <<FK>>
}

enum "Консультация" as cons 
{
    ID_Консультация: int <<PK>>
    ID_Заявка : int <<FK>>
    ID_Статус_консультации : int <<FK>>
}

cust ||--o{ request : могут отправлять 
spec ||--o{ request : могут принимать/отклонять
app_statuses ||--o{ request
platf ||--o{ request
spec ||--o{  spec_enum : имеет
skills_cat }o--|| spec : имеет
skills_cat }o--|| skills
request ||--o| cons : может создать
cons }o--|| cons_statuses
cust }o--|| countries
cust }o--|| cities
spec }o--|| countries
spec }o--|| cities

cust }o--|| appl 
spec }o--|| appl


@enduml